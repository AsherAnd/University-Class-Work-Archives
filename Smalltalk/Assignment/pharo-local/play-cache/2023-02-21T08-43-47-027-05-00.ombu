OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T08:44:09.295-05:00' ],		#self : OmReference [ '1' ]	},	#content : 'Transcript show: \'Hi\'.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T08:45:03.284-05:00' ],		#self : OmReference [ '2' ]	},	#content : 'Transcript clear.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T10:08:51.959-05:00' ],		#self : OmReference [ '3' ]	},	#content : 'Transcript clear.\r\r|'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T10:11:18.919-05:00' ],		#self : OmReference [ '4' ]	},	#content : '| a |\ra := War deal: #(1 2 3).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T12:31:29.392-05:00' ],		#self : OmReference [ '5' ]	},	#content : '| a |\ra := War deal: #(1 2 3 4).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T22:20:07.019-05:00' ],		#self : OmReference [ '6' ]	},	#content : '| a |\ra := War deal: #(1 2 3 4).\r\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-21T22:25:19.642-05:00' ],		#self : OmReference [ '7' ]	},	#content : '| a |\ra := War deal: #(1 2 3 4).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:25:32.102-05:00' ],		#self : OmReference [ '8' ]	},	#content : '| a |\ra := War deal: #(1 1 13).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:28:38.179-05:00' ],		#self : OmReference [ '9' ]	},	#content : '| a |\ra := War deal: #(1 1 13).\r\rTranscript clear.\rTranscript show: .\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:29:16.013-05:00' ],		#self : OmReference [ '10' ]	},	#content : '| a |\ra := War deal: #(1 1 13).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:29:40.662-05:00' ],		#self : OmReference [ '11' ]	},	#content : '| a |\ra := War deal: #(1 1 13 8 2 6).\r\rTranscript clear.\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:36:44.324-05:00' ],		#self : OmReference [ '12' ]	},	#content : '| a |\ra := War deal: #(1 1 13 8 2 6).\r\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T16:55:32.439-05:00' ],		#self : OmReference [ '13' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript show: a.\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T19:54:10.986-05:00' ],		#self : OmReference [ '14' ]	},	#content : '| a b |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript show: a.\r\rb := OrderedCollection new.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T19:54:50.838-05:00' ],		#self : OmReference [ '15' ]	},	#content : '| a b |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript show: a.\r\rb := OrderedCollection with: 4 with: 3 with: 2 with: 1.\r\rTranscript show: b.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T19:55:46.306-05:00' ],		#self : OmReference [ '16' ]	},	#content : '| a b |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript show: a.\r\rb := OrderedCollection with: 4 with: 3 with: 2 with: 1.\r\rb add: \rTranscript show: b.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T19:56:27.89-05:00' ],		#self : OmReference [ '17' ]	},	#content : '| a b |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript show: a.\r\rb := OrderedCollection with: 4 with: 3 with: 2 with: 1.\r\rb add: $A.\rTranscript show: b.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:36:29.387-05:00' ],		#self : OmReference [ '18' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:37:58.254-05:00' ],		#self : OmReference [ '19' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:40:28.88-05:00' ],		#self : OmReference [ '20' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:55:34.659-05:00' ],		#self : OmReference [ '21' ]	},	#content : '| b |\r"a := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a."\r\rb := OrderedCollection with: 4 with: 3 with: 2 with: 1. \r\rTranscript show: b.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:56:09.496-05:00' ],		#self : OmReference [ '22' ]	},	#content : '| b |\r"a := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a."\r\rb := OrderedCollection with: 4 with: 3 with: 2 with: 1. \r\rb addFirst: 1; removeLast.\r\rTranscript show: b.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T20:56:29.508-05:00' ],		#self : OmReference [ '23' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:12:02.411-05:00' ],		#self : OmReference [ '24' ]	},	#content : '| a b |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:14:27.563-05:00' ],		#self : OmReference [ '25' ]	},	#content : '| a warchest playPlayer1 playPlayer2|\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 \r1 to: ((warchest size)/2) do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:15:52.812-05:00' ],		#self : OmReference [ '26' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r1 to: ((warchest size)/2) do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:16:02.749-05:00' ],		#self : OmReference [ '27' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:16:22.513-05:00' ],		#self : OmReference [ '28' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: 3 do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:16:39.514-05:00' ],		#self : OmReference [ '29' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:17:13.454-05:00' ],		#self : OmReference [ '30' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [Transcript show: \'Im in\'.playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:17:39.073-05:00' ],		#self : OmReference [ '31' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:18:05.128-05:00' ],		#self : OmReference [ '32' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [Transcript show: \'Test\'].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:18:51.946-05:00' ],		#self : OmReference [ '33' ]	},	#content : '| warchest playPlayer1 playPlayer2|\r\rwarchest := OrderedCollection with: 1 with: 1 with: 13 with: 8 with: 6 with: 2.\rplayPlayer1 := OrderedCollection with: 1 with: 2 with: 13.\rplayPlayer2 := OrderedCollection with: 1 with: 6 with: 8.\r\r1 to: ((warchest size)/2) do: [:a | playPlayer1 removeFirst. playPlayer2 removeFirst].\rplayPlayer1 addAll: warchest.\r\rTranscript show: playPlayer1; cr.\rTranscript show: playPlayer2 ; cr'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:19:45.458-05:00' ],		#self : OmReference [ '34' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\rTranscript clear.\rTranscript show: a.\r\r '}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:28:25.897-05:00' ],		#self : OmReference [ '35' ]	},	#content : '| a |\ra := War deal: #(13 8 2 6 1 1).\r\r"Transcript clear."\rTranscript show: a.\r\r '}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-22T21:42:05.262-05:00' ],		#self : OmReference [ '36' ]	},	#content : 'tests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-23T08:47:10.095-05:00' ],		#self : OmReference [ '36' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T18:40:54.665-05:00' ],		#self : OmReference [ '37' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: 1 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T19:15:31.191-05:00' ],		#self : OmReference [ '37' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T19:52:57.241-05:00' ],		#self : OmReference [ '37' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: 4 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T19:54:28.118-05:00' ],		#self : OmReference [ '38' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T19:57:24.62-05:00' ],		#self : OmReference [ '37' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: 1 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T20:30:33.422-05:00' ],		#self : OmReference [ '38' ]	},	#content : '| a |\r\ra := OrderedCollection with: 4 with: 3 with: 2 with: 1. \r\r1 to: (a size) do: [ :a |  ]'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T20:31:37.308-05:00' ],		#self : OmReference [ '39' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: 1 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T20:38:16.368-05:00' ],		#self : OmReference [ '40' ]	},	#content : '| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:35:19.507-05:00' ],		#self : OmReference [ '41' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:36:01.608-05:00' ],		#self : OmReference [ '42' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 13 1 11 12 9 10 7 8 5 6 3 \t\t4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 \t\t11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 \t\t11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\t\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:36:31.48-05:00' ],		#self : OmReference [ '43' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 13 1 11 12 9 10 7 8 5 6 3 \t\t4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 \t\t11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 \t\t11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:37:44.144-05:00' ],		#self : OmReference [ '44' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 1312 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 13 1 11 12 9 10 7 8 5 6 3 \t\t4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 \t\t11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 \t\t11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:38:14.538-05:00' ],		#self : OmReference [ '45' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-24T22:39:38.147-05:00' ],		#self : OmReference [ '46' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T09:11:11.912-05:00' ],		#self : OmReference [ '47' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 1 wins every round"\r\t#(2 3 4 5 6 7 8 9 10 11 12 13 2 1 3 4 5 6 7 8 9 10 11 12 13 1 \r\t2 3 4 5 6 7 8 9 10 11 12 13 2 1 3 4 5 6 7 8 9 10 11 12 13 1 )\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T09:12:44.781-05:00' ],		#self : OmReference [ '48' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 1 wins every round"\r\t#(2 3 4 5 6 7 8 9 10 11 12 13 2 1 3 4 5 6 7 8 9 10 11 12 13 1 \r\t\t2 3 4 5 6 7 8 9 10 11 12 13 2 1 3 4 5 6 7 8 9 10 11 12 13 1 )\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 13 \r\t\t1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 )\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T09:13:07.555-05:00' ],		#self : OmReference [ '49' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T09:25:12.34-05:00' ],		#self : OmReference [ '50' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: 5 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T10:56:17.629-05:00' ],		#self : OmReference [ '47' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: 1 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: 5.\r\tshould_be := results at: 5.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T10:57:41.823-05:00' ],		#self : OmReference [ '47' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: 5 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:21:01.56-05:00' ],		#self : OmReference [ '47' ]	},	#content : '| a |\r\ra := War deal: #()'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:22:11.73-05:00' ],		#self : OmReference [ '48' ]	},	#content : '| a |\r\ra := War deal: #(1 1 2 11 6 6 13 9 13 2).\r\rTranscript clear.\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:23:10.087-05:00' ],		#self : OmReference [ '49' ]	},	#content : '| a |\r\ra := War deal: #(1 1 2 11 6 6 13 9 13 2).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:24:05.648-05:00' ],		#self : OmReference [ '50' ]	},	#content : '| a |\r\ra := War deal: #(13 2 13 9 6 6 211 1 1).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:24:15.386-05:00' ],		#self : OmReference [ '51' ]	},	#content : '| a |\r\ra := War deal: #(13 2 13 9 6 6 2 11 1 1).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:25:26.209-05:00' ],		#self : OmReference [ '52' ]	},	#content : '| a |\r\ra := War deal: #(8 7 13 2 13 9 6 6 2 11 1 1).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:27:12.151-05:00' ],		#self : OmReference [ '53' ]	},	#content : '| a |\r\ra := War deal: #(7 12 8 7 13 2 13 9 6 6 2 11 1 1).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:27:26.564-05:00' ],		#self : OmReference [ '54' ]	},	#content : '| a |\r\rTranscript clear.\r\ra := War deal: #(7 12 8 7 13 2 13 9 6 6 2 11 1 1).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:32:11.252-05:00' ],		#self : OmReference [ '55' ]	},	#content : '| a |\r\rTranscript clear.\r\ra := War deal: #(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13).\r\rTranscript show: a'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:46:02.785-05:00' ],		#self : OmReference [ '56' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T16:46:58.61-05:00' ],		#self : OmReference [ '57' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: 5 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:37:09.752-05:00' ],		#self : OmReference [ '58' ]	},	#content : '| a |\r\rTranscript clear.\r\ra :=  War deal'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:42:54.882-05:00' ],		#self : OmReference [ '59' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: 5 do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r\r\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:43:39.447-05:00' ],		#self : OmReference [ '60' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\r\t\r\t\t\t\t'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:44:00.833-05:00' ],		#self : OmReference [ '60' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size)'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:44:51.736-05:00' ],		#self : OmReference [ '61' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:48:10.466-05:00' ],		#self : OmReference [ '62' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 1 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r10 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T17:50:05.756-05:00' ],		#self : OmReference [ '63' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 2 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 4 \t\t13 6 13 3 7 5 13 4 3 2 11 3 11 2 2)\r).\r\rTranscript clear.\r10 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-02-25T19:17:02.992-05:00' ],		#self : OmReference [ '64' ]	},	#content : '"Asher Andargachew\r501101885\rCPS506"\r\r| tests results |\r\r"\rThese test cases assume that the TOP of the deck is the FRONT of the array.\rThat is, the top card is index 1, 2nd from the top is index 2, etc.\rIf your deal: logic is opposite, simply reverse the array in your method,\rand reverse it back before returning.\r"\rtests := #(\r\t"One long war until the end. This is technically a tie, but since\r\twe are returning the pile and not declaring a winner, simply return\r\tthe tied pile (the warchest)"\r\t#(1 1 1 1 13 13 13 13 11 11 11 11 12 12 12 12 10 10 10 10 9 9 9 9\r\t\t7 7 7 7 8 8 8 8 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t"War at the start, then player 1 wins every draw"\r\t#(1 13 1 13 1 13 1 13 12 11 12 11 12 11 12 11 10 9 10 9 10 9 10 9\r\t\t8 7 8 7 8 7 8 7 6 5 6 5 6 5 6 5 4 3 4 3 4 3 4 3 2 2 2 2)\r\t"Same as above, but players are inverted. Good sanity check."\r\t#(13 1 13 1 13 1 13 1 11 12 11 12 11 12 11 12 9 10 9 10 9 10 9 10 \r\t\t7 8 7 8 7 8 7 8 5 6 5 6 5 6 5 6 3 4 3 4 3 4 3 4 2 2 2 2)\r\t"Medium length game with 4 wars, finishes on a war"\r\t#(10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9\r\t\t10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9)\r\t"Long game with 11 wars, several of which are multiple rounds"\r\t#(1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\t\t1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13)\r\t"Beginning of personal test cases: Player 2 wins every round"\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 \r\t\t3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t"Personal test cases: Player 1 wins every round"\r\t#(13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3 \r\t\t13 1 11 12 9 10 7 8 5 6 3 4 2 1 12 13 10 11 8 9 6 7 4 5 2 3)\r\t"Personal test cases: Long multi round war where Player 2 wins "\r\t#(2 3 2 3 2 3 2 3 4 5 4 5 4 5 4 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 \r\t\t9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 1 1 1 1)\r\t"Personal test cases: Player 2 starts and wins, ends in a long serveral rounds war"\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 \r\t\t9 9 8 8 8 8 7 7 7 7 6 6 6 6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t"Personal test cases: Long game with several wars, ending in war"\r\t#(2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13 \r\t\t2 4 6 8 10 12 1 3 5 7 9 11 13 2 4 6 8 10 12 1 3 5 7 9 11 13)\r).\rresults := #(\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 \r\t\t8 8 8 8 7 7 7 7 6 6 6 6 5 5 5 5 4 4 4 4 3 3 3 3 2 2 2 2)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(4 3 2 2 2 2 4 3 4 3 4 3 6 5 6 5 6 5 6 5 8 7 8 7 8 7 8 7 \r\t\t10 9 10 9 10 9 10 9 12 11 12 11 12 11 12 11 1 13 1 13 1 13 1 13)\r\t#(1 1 13 12 9 5 11 4 9 3 8 7 7 2 13 10 12 5 10 4 9 6 8 3 1 1 13 \r\t\t12 7 5 11 4 9 3 8 6 7 2 13 10 12 5 11 11 10 8 6 4 6 3 2 2)\r\t#(1 10 13 8 11 9 8 7 11 8 13 7 13 6 12 6 9 5 8 5 7 4 7 4 11 6 12 \r\t\t10 6 3 2 2 12 5 9 3 10 4 9 2 10 3 5 2 1 1 1 13 12 11 4 3)\r\t"Personal test cases results"\t\r\t#(1 13 12 11 10 9 8 7 6 5 4 3 1 2 13 12 11 10 9 8 7 6 5 4 3 2 1 13 12 11 10 9 8 7 6 5 4\r\t\t3 1 2 13 12 11 10 9 8 7 6 5 4 3 2)\r\t#(3 2 5 4 7 6 9 8 11 10 13 12 1 2 4 3 6 5 8 7 10 9 12 11 1 13 3 2 5 4 7 6 9 8 11 10 13 \t\t12 1 2 4 3 6 5 8 7 10 9 12 11 1 13)\r\t#(1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 \t\t6 5 4 5 4 5 4 5 4 3 2 3 2 3 2 3 2)\r\t#(3 2 3 2 3 2 3 2 5 4 5 4 5 4 5 4 1 1 1 1 13 13 13 13 12 12 12 12 11 11 11 11 10 10 10 \t\t10 9 9 9 9 8 8 8 8 7 7 7 7 6 6 6 6)\r\t#(11 9 5 2 1 1 1 13 12 10 8 7 12 11 6 5 10 9 1 6 7 4 8 4 5 3 12 11 12 9 10 9 10 8 8 7 6 \t\t4 13 6 13 3 7 5 13 4 3 2 11 3 2 2)\r).\r\rTranscript clear.\r1 to: (results size) do: [ :i |\r\t| shuffling should_be you_said |\r\tshuffling := tests at: i.\r\tshould_be := results at: i.\r\tyou_said := War deal: shuffling.\r\t\r\tyou_said = should_be \r\tifTrue: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': PASSED\'; cr.\r\t]\r\tifFalse: [ \r\t\tTranscript show: \'Test \'; show: i; show: \': FAILED\'; cr.\r\t]\r]\r'}